@use '../settings/setup';
@use '../settings/shadows';
@use './custom-property';
@use './shadow';
@use 'sass:map';

// Shadows
//
// **Returns requested shadow from the global `$bitstyles-shadows-shadows` map**.
//
// Examples:
//
// `box-shadow: shadows.get('brand-1');`
// `filter: shadows.get('brand-1', 'drop');`
//
// @param {String} $shadow  Name of the shadow required, as defined in the map `$bitstyles-shadows-shadows`.
// @param {String} $format  The format in which you want the returned shadow. Options are `box` (for CSS box-shadow property) and `drop` (for CSS/SVG drop-shadow using the filter propertt). Defaults to `box`
//

/* prettier-ignore */
@function get($shadow, $type: 'box', $format: setup.$default-token-format) {
  @if $format == setup.$default-token-format {
    @return var(#{custom-property.get($items: ('shadow', $shadow, $type))});
  } @else {
    @if map.has-key(shadows.$shadows, $shadow) {
      @if $type == 'box' {
        @return shadow.to-box-shadow(map.get(shadows.$shadows, $shadow));
      }

      @if $type == 'drop' {
        @return shadow.to-drop-shadow(map.get(shadows.$shadows, $shadow));
      }
    } @else {
      @error 'Oops! There’s no shadow with the name ‘#{$shadow}’.';
    }
  }
}
