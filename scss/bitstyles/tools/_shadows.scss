@use '../settings/shadows';
@use '../tools/shadow';
@use 'sass:map';

// Shadows
//
// **Returns requested shadow from the global `$bitstyles-shadows-shadows` map**.
//
// Examples:
//
// `box-shadow: shadows.get('default');`
// `filter: shadows.get('default', 'drop');`
//
// @param {String} $shadow  Name of the shadow required, as defined in the map `$bitstyles-shadows-shadows`.
// @param {String} $format  The format in which you want the returned shadow. Options are `box` (for CSS box-shadow property) and `drop` (for CSS/SVG drop-shadow using the filter propertt). Defaults to `box`
//

@function get($shadow, $format: 'box') {
  @if map.has-key(shadows.$shadows, $shadow) {
    @if $format == 'box' {
      @return shadow.to-box-shadow(map.get(shadows.$shadows, $shadow));
    }

    @if $format == 'drop' {
      @return shadow.to-drop-shadow(map.get(shadows.$shadows, $shadow));
    }
  }

  @else {
    @error 'Oops! There’s no shadow with the name ‘#{$shadow}’.';
  }
}
