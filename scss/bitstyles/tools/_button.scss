@use 'sass:map';
@use 'sass:list';
@use './classname';
@use '../settings/typography';
@use '../atoms/button/settings';
@use './custom-property';
@use './custom-properties';

@mixin colors($colors, $variant-name) {
  $button-name: 'button#{$variant-name}';
  $allow-list: list.join(settings.$allowed-color-properties, settings.$extra-color-properties);

  @if map.has-key($colors, 'default') {
    @include custom-properties.output-filtered(
      $properties: map.get($colors, 'default'),
      $allow-list: $allow-list,
      $module-name: (
        $button-name,
      ),
      $layer: 'atom'
    );
  }

  @if map.has-key($colors, 'hover') {
    @include custom-properties.output-filtered(
      $properties: map.get($colors, 'hover'),
      $allow-list: $allow-list,
      $module-name: (
        $button-name,
        'hover',
      ),
      $layer: 'atom'
    );
  }

  @if map.has-key($colors, 'active') {
    @include custom-properties.output-filtered(
      $properties: map.get($colors, 'active'),
      $allow-list: $allow-list,
      $module-name: (
        $button-name,
        'active',
      ),
      $layer: 'atom'
    );
  }

  @if map.has-key($colors, 'pressed') {
    @include custom-properties.output-filtered(
      $properties: map.get($colors, 'pressed'),
      $allow-list: $allow-list,
      $module-name: (
        $button-name,
        'pressed',
      ),
      $layer: 'atom'
    );
  }

  @if map.has-key($colors, 'disabled') {
    @include custom-properties.output-filtered(
      $properties: map.get($colors, 'disabled'),
      $allow-list: $allow-list,
      $module-name: (
        $button-name,
        'disabled',
      ),
      $layer: 'atom'
    );
  }
}

@mixin sizes($sizes, $with-square-variant: true) {
  @include custom-properties.output-filtered(
    $properties: $sizes,
    $allow-list: settings.$allowed-shape-properties,
    $module-name: 'button',
    $layer: 'atom'
  );

  @each $property-name in (settings.$allowed-shape-properties) {
    @if map.has-key($sizes, $property-name) {
      /* prettier-ignore */
      #{custom-property.get($items: ('button', $property-name), $layer: 'atom')}: #{map.get(
          $sizes,
          $property-name
        )};
    }
  }

  @if $with-square-variant {
    $line-height: custom-property.get(
      $items: (
        'line-height',
        '5',
      ),
    );
    $min-width: custom-property.get(
      $items: (
        'button',
        'min-width',
      ),
      $layer: 'atom',
    );
    $min-height: custom-property.get(
      $items: (
        'button',
        'min-height',
      ),
      $layer: 'atom',
    );

    &#{classname.get($classname-items: 'button--square', $layer: 'atom')} {
      #{$min-width}: #{calc(
          1em *
            var(#{$line-height}) +
            2 *
            #{map.get($sizes, 'padding-vertical')}
        )};
      #{$min-height}: #{calc(
          1em *
            var(#{$line-height}) +
            2 *
            #{map.get($sizes, 'padding-vertical')}
        )};

      @if map.has-key($sizes, 'padding-vertical') {
        #{custom-property.get($items: ('button', 'padding-horizontal'), $layer: 'atom')}: #{map.get(
            $sizes,
            'padding-vertical'
          )};
        #{custom-property.get($items: ('button', 'padding-vertical'), $layer: 'atom')}: #{map.get(
            $sizes,
            'padding-vertical'
          )};
      }
    }
  }
}
