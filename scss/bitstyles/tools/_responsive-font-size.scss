@use 'sass:map';
@use '../settings/setup';
@use '../settings/typography-responsive';
@use '../tools/media-query';

// Font-size
//
// **Outputs requested responsive font-sizes from the global `typography-responsive.$typographic-scale` map.**
// e.g. `@include responsive-font-size.get('h1');`
//
// @param {String} $font-size  The font-size as named in the `typography-responsive.$typographic-scale` map
//
// @param {String} $breakpoint   Optional. Defaults to `null`, which outputs the font-sizes at each breakpoint defined in `typography-responsive.$font-sizes`. If you pass a $breakpoint parameter, the output will be the font-size at that specific breakpoint
//

/* stylelint-disable scss/at-mixin-pattern */
@mixin _output-typographic-scale($font-size, $breakpoint) {
  @if map.has-key(typography-responsive.$typographic-scale, $breakpoint) {
    $typographic-scale: map.get(
      typography-responsive.$typographic-scale,
      $breakpoint
    );

    @if map.has-key($typographic-scale, $font-size) {
      $typography: map.get($typographic-scale, $font-size);

      font-size: map.get($typography, 'font-size');
      line-height: map.get($typography, 'line-height');
    } @else {
      @error 'Oops! There’s no font-size at that breakpoint ‘#{$font-size}/#{$breakpoint}’.';
    }
  } @else {
    @error 'Oops! Font-sizes at breakpoint ‘#{$breakpoint}’ do not exist.';
  }
}
/* stylelint-enable scss/at-mixin-pattern */

@mixin get($font-size, $breakpoint: null) {
  @if $breakpoint {
    @include _output-typographic-scale($font-size, $breakpoint);
  } @else {
    @each $breakpoint-name,
      $typographic-scale in typography-responsive.$typographic-scale
    {
      @include media-query.get($breakpoint-name) {
        @include _output-typographic-scale($font-size, $breakpoint-name);
      }
    }
  }
}
