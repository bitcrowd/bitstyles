@forward './settings';
@use './settings';
@use '../../design-tokens/layout';
@use '../../tools/classname';
@use '../../tools/design-token';
@use '../../tools/media-query';
@use '../../tools/properties';
@use '../../tools/themes';
@use 'sass:map';

/* stylelint-disable scss/dollar-variable-default */

/* prettier-ignore */
$padding-horizontal-property: design-token.get('badge', 'padding-horizontal');

/* prettier-ignore */
$padding-vertical-property: design-token.get('badge', 'padding-vertical');

/* prettier-ignore */
$gap-property: design-token.get('badge', 'gap');

/* prettier-ignore */
$prepend-spacing-property: design-token.get('badge', 'prepend', 'spacing');

/* prettier-ignore */
$shadow-property: design-token.get('badge', 'shadow');

/* prettier-ignore */
$font-size-property: design-token.get('badge', 'font-size');
/* stylelint-enable scss/dollar-variable-default */

#{classname.get($classname-items: 'badge', $layer: 'atom')} {
  display: inline-flex;
  align-items: center;
  padding: var(#{$padding-vertical-property})
    var(#{$padding-horizontal-property});
  gap: var(#{$gap-property});
  border-radius: layout.$border-radius-round;
  box-shadow: var(#{$shadow-property});
  font-size: var(design-token.get('badge', 'font-size'));
  font-weight: var(design-token.get('font-weight', 'normal'));
  white-space: nowrap;
}

/* prettier-ignore */
#{classname.get($classname-items: 'badge__prepend', $layer: 'atom')} {
  margin-top: calc(var(#{$prepend-spacing-property}) - var(#{$padding-vertical-property}));
  margin-bottom: calc(var(#{$prepend-spacing-property}) - var(#{$padding-vertical-property}));
  margin-left: calc(var(#{$prepend-spacing-property}) - var(#{$padding-horizontal-property}));
}

/* Theme variants */

@each $theme-name, $theme in settings.$theme-variants {
  @include themes.get($theme-name) {
    #{$shadow-property}: map.get($theme, 'shadow');
  }
}

/* Size variants */

/* prettier-ignore */
@each $breakpoint, $size-variants in settings.$size-variants {
  @include media-query.get($breakpoint) {
    @each $size-variant-name, $size-variant in ($size-variants) {
      $class: '';
      @if $size-variant-name == '' {
        $class: 'badge';
      } @else {
        $class: 'badge--#{$size-variant-name}';
      }
      #{classname.get($classname-items: $class, $layer: 'atom')} {
        /* stylelint-disable max-nesting-depth */
        @if map.has-key($size-variant, 'padding-horizontal') {
          #{$padding-horizontal-property}: map.get($size-variant, 'padding-horizontal');
        }
        @if map.has-key($size-variant, 'padding-vertical') {
          #{$padding-vertical-property}: map.get($size-variant, 'padding-vertical');
        }
        @if map.has-key($size-variant, 'prepend-spacing') {
          #{$prepend-spacing-property}: #{map.get($size-variant, 'prepend-spacing')};
        }
        @if map.has-key($size-variant, 'gap') {
          #{$gap-property}: map.get($size-variant, 'gap');
        }
        @if map.has-key($size-variant, 'font-size') {
          #{$font-size-property}: map.get($size-variant, 'font-size');
        }
        /* stylelint-enable max-nesting-depth */
      }
    }
  }
}
