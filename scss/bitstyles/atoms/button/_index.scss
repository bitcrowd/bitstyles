@forward 'settings';
@use './settings';
@use '../../design-tokens/focus';
@use '../../tools/classname';
@use '../../tools/design-token';

/* prettier-ignore */

#{classname.get($classname-items: 'button', $layer: 'atom')} {
  #{design-token.get('button', 'border-top-right-radius')}: var(design-token.get('button', 'border-radius'));
  #{design-token.get('button', 'border-bottom-right-radius')}: var(design-token.get('button', 'border-radius'));
  #{design-token.get('button', 'border-bottom-left-radius')}: var(design-token.get('button', 'border-radius'));
  #{design-token.get('button', 'border-top-left-radius')}: var(design-token.get('button', 'border-radius'));
  #{design-token.get('button', 'transition')}: settings.$transition;
  #{design-token.get('button', 'justify-content')}: settings.$justify-content;
  display: flex;
  position: relative;
  flex-shrink: 0;
  align-items: center;
  justify-content: var(design-token.get('button', 'justify-content'));
  min-width: var(design-token.get('button', 'min-width'));
  max-width: 100%;
  min-height: var(design-token.get('button', 'min-height'));
  margin: 0;
  padding:
    calc(var(design-token.get('button', 'padding-vertical')) - var(design-token.get('button', 'border-width'), 0rem))
    calc(var(design-token.get('button','padding-horizontal')) - var(design-token.get('button', 'border-width'), 0rem));
  overflow: visible;
  transition: var(design-token.get('button', 'transition'));
  border-width: var(design-token.get('button', 'border-width'));
  border-style: solid;
  border-radius:
    var(design-token.get('button', 'border-top-left-radius'))
    var(design-token.get('button', 'border-top-right-radius'))
    var(design-token.get('button', 'border-bottom-right-radius'))
    var(design-token.get('button', 'border-bottom-left-radius'));
  border-color: var(design-token.get('button', 'border-color'));
  outline-offset: 0;
  background-color: var(design-token.get('button', 'background-color'));
  box-shadow: var(design-token.get('button', 'box-shadow'));
  color: var(design-token.get('button', 'color'));
  font-family: settings.$font-family;
  font-size: var(design-token.get('button', 'font-size'), inherit);
  font-weight: var(design-token.get('button', 'font-weight'), inherit);
  line-height: var(design-token.get('button', 'line-height'), inherit);
  text-align: center;
  text-decoration: none;
  white-space: nowrap;
  cursor: pointer;
  user-select: none;
  -webkit-appearance: none; // stylelint-disable-line property-no-vendor-prefix
  touch-action: manipulation;

  &:hover,
  &:focus {
    z-index: 1;
    border-color: var(design-token.get('button', 'hover', 'border-color'));
    outline-width: 0;
    background-color: var(design-token.get('button', 'hover', 'background-color'));
    box-shadow: var(design-token.get('button', 'hover', 'box-shadow'));
    color: var(design-token.get('button', 'hover', 'color'));
    text-decoration: none;
  }

  &:active {
    z-index: 1;
    border-color: var(design-token.get('button', 'active', 'border-color'));
    outline-width: 0;
    background-color: var(design-token.get('button', 'active', 'background-color'));
    box-shadow: var(design-token.get('button', 'active', 'box-shadow'));
    color: var(design-token.get('button', 'active', 'color'));
    text-decoration: none;
  }

  &:focus-visible {
    z-index: 3;
    outline: focus.$outline-color solid focus.$outline-width;
    outline-offset: focus.$outline-offset;
  }

  &[aria-expanded='true'],
  &[aria-pressed='true'],
  &[aria-selected='true'],
  &[aria-current] {
    z-index: 2;
    border-color: var(design-token.get('button', 'pressed', 'border-color'));
    background-color: var(design-token.get('button', 'pressed', 'background-color'));
    box-shadow: var(design-token.get('button', 'pressed', 'box-shadow'));
    color: var(design-token.get('button', 'pressed', 'color'));
  }

  &:disabled,
  &[aria-disabled='true'],
  &:disabled:hover,
  &[aria-disabled='true']:hover,
  &:disabled:focus,
  &[aria-disabled='true']:focus {
    border-color: var(design-token.get('button', 'disabled', 'border-color'));
    background-color: var(design-token.get('button', 'disabled', 'background-color'));
    box-shadow: var(design-token.get('button', 'disabled', 'box-shadow'));
    color: var(design-token.get('button', 'disabled', 'color'));
    cursor: not-allowed;
  }
}

#{classname.get($classname-items: 'button__avatar', $layer: 'atom')},
#{classname.get($classname-items: 'button__icon', $layer: 'atom')} {
  flex-shrink: 0;
  margin-right: settings.$icon-spacing;
  margin-left: calc((settings.$icon-spacing * -1) / 4);
}

#{classname.get($classname-items: 'button__label', $layer: 'atom')}
  + #{classname.get($classname-items: 'button__icon', $layer: 'atom')} {
  margin-right: calc((settings.$icon-spacing * -1) / 4);
  margin-left: settings.$icon-spacing;
}
