@forward 'settings';
@use './settings';
@use '../../tools/classname';
@use '../../tools/custom-property';
@use '../../tools/button';

#{classname.get($classname-items: 'button--tab-container', $layer: 'atom')} {
  & > *:first-child {
    margin-left: calc(
      var(
          #{custom-property.get(
              $items: (
                'button',
                'padding-horizontal',
              ),
              $layer: 'atom'
            )}
        ) * -1
    );
  }
}

#{classname.get($classname-items: 'button--tab', $layer: 'atom')} {
  position: relative;

  &,
  &:visited {
    &::after {
      content: '';
      position: absolute;
      right: 0;
      bottom: 0;
      left: 0;
      height: settings.$indicator-width;
      transition: settings.$indicator-transition;
      border-radius: settings.$indicator-border-radius;
      background-color: settings.$indicator-color;
    }
  }

  &:hover,
  &:focus {
    &::after {
      background-color: settings.$indicator-color-hover;
    }
  }

  &:active {
    &::after {
      background-color: settings.$indicator-color-active;
    }
  }

  &[aria-selected='true'],
  &[aria-current] {
    &::after {
      background-color: settings.$indicator-color-pressed;
    }
  }

  &:disabled,
  &[aria-disabled='true'],
  &:disabled:hover,
  &[aria-disabled='true']:hover,
  &:disabled:focus,
  &[aria-disabled='true']:focus {
    &::after {
      background-color: settings.$indicator-color-disabled;
    }
  }

  #{classname.get($classname-items: 'icon', $layer: 'atom')} {
    color: var(
      #{custom-property.get(
          $items: (
            'button--tab',
            'icon-color',
          ),
          $layer: 'atom'
        )},
      currentcolor
    );
  }
}
