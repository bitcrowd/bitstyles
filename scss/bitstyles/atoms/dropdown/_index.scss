@forward 'settings';
@use './settings';
@use '../../tools/media-query';
@use '../../tools/classname';

#{classname.get($classname-items: 'dropdown', $layer: 'atom')} {
  position: absolute;
  z-index: settings.$z-index;
  top: 100%;
  width: min-content;
  min-width: settings.$min-width;
  max-width: 90vw;
  max-height: 90vh;
  margin: settings.$border-radius 0;
  overflow-x: hidden auto;
  overscroll-behavior: contain;
  border: settings.$border;
  border-radius: settings.$border-radius;
  background-color: settings.$background-color;
  box-shadow: settings.$box-shadow;

  [role='separator'] {
    margin: settings.$separator-spacing 0;
    border-top: settings.$separator-border;
  }

  @media screen and (min-height: settings.$max-height) {
    max-height: settings.$max-height;
  }

  @include media-query.get('s') {
    right: 0;
    left: 0;
    width: 100%;
    min-width: 100%;
    max-width: 100vw;
  }

  @include media-query.get('motion-ok') {
    &.is-transitioning {
      transition: settings.$transition;
      will-change: settings.$will-change;
    }
  }

  @each $state-alias, $state-properties in settings.$states {
    &.is-#{$state-alias} {
      /* stylelint-disable max-nesting-depth */
      @each $state-property, $state-value in $state-properties {
        #{$state-property}: $state-value;
      }
      /* stylelint-enable max-nesting-depth */
    }
  }
}

#{classname.get($classname-items: 'dropdown--right', $layer: 'atom')} {
  right: 0;
  left: auto;
}

#{classname.get($classname-items: 'dropdown--top', $layer: 'atom')} {
  top: auto;
  bottom: 100%;
}

#{classname.get($classname-items: 'dropdown--full-width', $layer: 'atom')} {
  right: 0;
  left: 0;
  width: 100%;
  max-width: none;
}
