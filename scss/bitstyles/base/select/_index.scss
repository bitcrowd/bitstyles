@forward 'settings';
@use 'settings';
@use '../../tools/design-token';
@use '../../design-tokens/focus';
@use '../../tools/custom-property';

@supports (-webkit-appearance: none) or (-moz-appearance: none) or
  (appearance: none) {
  /* stylelint-disable selector-max-type */
  select {
    #{custom-property.get($items: ('select', 'padding-vertical'))}: settings.$padding-vertical;
    #{custom-property.get($items: ('select', 'padding-horizontal'))}: settings.$padding-horizontal;
    #{custom-property.get($items: ('select', 'border-width'))}: settings.$border-width;
    display: block;
    width: 100%;
    padding:
      calc(var(#{custom-property.get($items: ('select', 'padding-vertical'))}) - var(#{custom-property.get($items: ('select', 'border-width'))}, 0rem))
      calc(var(#{custom-property.get($items: ('select','padding-horizontal'))}) - var(#{custom-property.get($items: ('select', 'border-width'))}, 0rem));
    overflow: hidden;
    transition: color var(design-token.get('transition', 'default', 'duration'))
        var(design-token.get('transition', 'default', 'easing')),
      background-color
        var(design-token.get('transition', 'default', 'duration'))
        var(design-token.get('transition', 'default', 'easing')),
      border var(design-token.get('transition', 'default', 'duration'))
        var(design-token.get('transition', 'default', 'easing'));
    border: settings.$border-width solid settings.$border-color;
    border-radius: settings.$border-radius;
    outline-offset: 0;
    background-color: settings.$background-color;
    background-image: settings.$background-image;
    background-repeat: no-repeat;
    background-position: right 0.75em top 50%;
    background-size: 1em;
    box-shadow: settings.$box-shadow;
    color: settings.$color;
    font-weight: settings.$font-weight;
    text-overflow: ellipsis;
    cursor: pointer;
    appearance: none;

    &::-ms-expand {
      display: none;
    }

    &:hover,
    &:focus {
      border-color: settings.$border-color-hover;
      background-color: settings.$background-color-hover;
      background-image: settings.$background-image-hover;
      box-shadow: settings.$box-shadow-hover;
      color: settings.$color-hover;
    }

    &:focus-visible {
      outline: focus.$outline-color solid focus.$outline-width;
      outline-offset: focus.$outline-offset;
    }

    &:active {
      border-color: settings.$border-color-active;
      outline: none;
      background-color: settings.$background-color-active;
      background-image: settings.$background-image-active;
      box-shadow: settings.$box-shadow-active;
      color: settings.$color-active;
    }

    &:invalid,
    &[aria-invalid='true'] {
      border-color: settings.$border-color-invalid;
      background-color: settings.$background-color-invalid;
      background-image: settings.$background-image-invalid;
      box-shadow: settings.$box-shadow-invalid;
      color: settings.$color-invalid;
    }

    &[disabled] {
      border-color: settings.$border-color-disabled;
      background-color: settings.$background-color-disabled;
      background-image: settings.$background-image-disabled;
      box-shadow: settings.$box-shadow-disabled;
      color: settings.$color-disabled;
      cursor: default;
    }

    &:focus:not(:focus-visible) {
      outline-width: 0;
    }
  }
  /* stylelint-enable selector-max-type */
}
