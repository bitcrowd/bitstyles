@use "sass:string";

@import './settings';

@mixin output-margins($margins, $breakpoint-suffix: '') {
  @each $size in map-get($map: $margins, $key: 'sizes') {
    @each $direction-name, $direction-properties in map-get($map: $margins, $key: 'directions') {
      .#{$bitstyles-namespace}u-margin-#{$size}--#{$direction-name}#{$breakpoint-suffix} {
        @each $direction in $direction-properties {
          #{string.unquote('margin#{$direction}')}: spacing($size);
        }
      }

      @if $size != '0' {
        .#{$bitstyles-namespace}u-margin-neg-#{$size}--#{$direction-name}#{$breakpoint-suffix} {
          @each $direction in $direction-properties {
            #{string.unquote('margin#{$direction}')}: -#{spacing($size)};
          }
        }
      }
    }
  }
}

@each $breakpoint-alias, $margins in $bitstyles-margins {
  @if $breakpoint-alias == 'base' {
    @include output-margins($margins);
  }

  @else {
    @include media-query($breakpoint-alias) {
      @include output-margins($margins, $breakpoint-suffix: '\\\@#{$breakpoint-alias}');
    }
  }
}
