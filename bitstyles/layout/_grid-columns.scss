// Grid Columns
//
// Uses `grid-column-generator()` to create a series of classes that control
// grid widths. Works across breakpoints.
//
// Commonly used as part of a grid layout, but can be used alone if needed.
//
// REQUIRES:
// - `settings/grid`
// - `tools/grid-column-generator`
//
// markup:
//   <div class="l-grid-2-of-12">
//      <div class="background-grey">2-of-12</div>
//   </div>
//   <div class="l-grid-4-of-12">
//     <div class="background-grey">4-of-12</div>
//   </div>
//   <div class="l-grid-6-of-12">
//     <div class="background-grey">6-of-12</div>
//   </div>
//
// Styleguide 5.2

@import 'settings/grid';
@include grid-columns($bitstyles-widths-columns);

@if variable-exists(bitstyles-grid-breakpoints) {
  @each $breakpoint in $bitstyles-breakpoints {
    @each $grid-breakpoint in $bitstyles-grid-breakpoints {
      $breakpoint-alias: nth($breakpoint, 1);

      /* stylelint-disable max-nesting-depth */
      // If the breakpoint is in the breakpoint grid list...
      @if ($breakpoint-alias == $grid-breakpoint) {
        // ...then for each breakpoint...
        @include media-query($breakpoint-alias) {
          // ..generate grid columns, with the appropiate postfix.
          @each $i in $bitstyles-widths-columns-responsive {
            @include grid-columns($i, -#{$breakpoint-alias});
          }
        }
      }
      /* stylelint-enable max-nesting-depth */
    }
  }
}
